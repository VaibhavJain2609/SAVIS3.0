/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./dist/es/twoProportions/twoProportionsEntry.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./dist/es/twoProportions/twoPropChart.js":
/*!************************************************!*\
  !*** ./dist/es/twoProportions/twoPropChart.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TwoPropChart; });\n/* harmony import */ var _util_translate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/translate.js */ \"./dist/es/util/translate.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar TwoPropChart =\n/*#__PURE__*/\nfunction () {\n  function TwoPropChart(canvas) {\n    _classCallCheck(this, TwoPropChart);\n\n    this.dom = {\n      canvas: canvas\n    };\n\n    if (!canvas) {\n      throw new Error('canvas is undefined!');\n    } // TODO(matthewmerrill): better tooltips\n    // TODO(matthewmerrill): make the red/green more intuitive with how data is entered\n    //  Note: This might require ChartJS v3.0.0 https://github.com/mendix/ChartJS/issues/31\n\n\n    this.chart = new Chart(canvas, {\n      type: 'bar',\n      data: {\n        labels: [_util_translate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].twoProportions.groupA, _util_translate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].twoProportions.groupB],\n        datasets: [{\n          label: '% ' + _util_translate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].twoProportions.successes,\n          backgroundColor: 'green',\n          data: [0, 0]\n        }, {\n          label: '% ' + _util_translate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].twoProportions.failures,\n          backgroundColor: 'red',\n          data: [0, 0]\n        }]\n      },\n      options: {\n        scales: {\n          xAxes: [{\n            stacked: true,\n            ticks: {\n              max: 100\n            }\n          }],\n          yAxes: [{\n            id: 'groupAAxis',\n            stacked: true,\n            ticks: {\n              max: 100\n            }\n          }]\n        },\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n  }\n\n  _createClass(TwoPropChart, [{\n    key: \"setProportions\",\n    value: function setProportions(_ref) {\n      var numASuccess = _ref.numASuccess,\n          numAFailure = _ref.numAFailure,\n          numBSuccess = _ref.numBSuccess,\n          numBFailure = _ref.numBFailure;\n      var totalInA = numASuccess + numAFailure;\n      var totalInB = numBSuccess + numBFailure;\n      var totalSuccess = numASuccess + numBSuccess;\n      var totalFailure = numAFailure + numBFailure;\n      this.chart.data.datasets[0].data[0] = 100 * numASuccess / totalInA;\n      this.chart.data.datasets[0].data[1] = 100 * numBSuccess / totalInB;\n      this.chart.data.datasets[1].data[0] = 100 * numAFailure / totalInA;\n      this.chart.data.datasets[1].data[1] = 100 * numBFailure / totalInB;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.chart.update();\n    }\n  }]);\n\n  return TwoPropChart;\n}();\n\n\n\n//# sourceURL=webpack:///./dist/es/twoProportions/twoPropChart.js?");

/***/ }),

/***/ "./dist/es/twoProportions/twoProportions.js":
/*!**************************************************!*\
  !*** ./dist/es/twoProportions/twoProportions.js ***!
  \**************************************************/
/*! exports provided: TwoProportions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TwoProportions\", function() { return TwoProportions; });\n/* harmony import */ var _util_math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/math.js */ \"./dist/es/util/math.js\");\n/* harmony import */ var _util_sampling_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/sampling.js */ \"./dist/es/util/sampling.js\");\n/* harmony import */ var _util_stackeddotchart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/stackeddotchart.js */ \"./dist/es/util/stackeddotchart.js\");\n/* harmony import */ var _util_summaries_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/summaries.js */ \"./dist/es/util/summaries.js\");\n/* harmony import */ var _util_tailchart_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/tailchart.js */ \"./dist/es/util/tailchart.js\");\n/* harmony import */ var _twoPropChart_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./twoPropChart.js */ \"./dist/es/twoProportions/twoPropChart.js\");\n/* harmony import */ var _util_translate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/translate.js */ \"./dist/es/util/translate.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\nvar TwoProportions =\n/*#__PURE__*/\nfunction () {\n  function TwoProportions(twoPropDiv) {\n    var _this = this;\n\n    _classCallCheck(this, TwoProportions);\n\n    this.dom = {\n      twoPropDiv: twoPropDiv,\n      aSuccess: twoPropDiv.querySelector('#a-success'),\n      aFailure: twoPropDiv.querySelector('#a-failure'),\n      bSuccess: twoPropDiv.querySelector('#b-success'),\n      bFailure: twoPropDiv.querySelector('#b-failure'),\n      inputCanvas: twoPropDiv.querySelector(\"#input-bars\"),\n      lastSimCanvas: twoPropDiv.querySelector(\"#last-sim-bars\"),\n      tailChartCanvas: twoPropDiv.querySelector('#tail-chart'),\n      numSimulations: twoPropDiv.querySelector('#num-simulations'),\n      tailDirectionElement: twoPropDiv.querySelector('#tail-direction'),\n      tailInputElement: twoPropDiv.querySelector('#tail-input'),\n      needData: twoPropDiv.querySelectorAll('[disabled=need-data]'),\n      needResults: twoPropDiv.querySelectorAll('[disabled=need-results]')\n    };\n    this.summaryElements = _util_summaries_js__WEBPACK_IMPORTED_MODULE_3__[\"loadSummaryElements\"](twoPropDiv);\n    this.charts = {\n      inputChart: new _twoPropChart_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this.dom.inputCanvas),\n      lastSimChart: new _twoPropChart_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this.dom.lastSimCanvas),\n      tailChart: new _util_tailchart_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n        chartElement: this.dom.tailChartCanvas,\n        whatAreWeRecording: _util_translate_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].twoProportions.differences,\n        summaryElements: this.summaryElements\n      })\n    };\n    this.dom.tailDirectionElement.addEventListener('change', function () {\n      _this.charts.tailChart.setTailDirection(_this.dom.tailDirectionElement.value);\n\n      _this.charts.tailChart.updateChart();\n    });\n    this.dom.tailInputElement.addEventListener('change', function () {\n      _this.charts.tailChart.setTailInput(_this.dom.tailInputElement.value * 1);\n\n      _this.charts.tailChart.updateChart();\n    });\n  }\n\n  _createClass(TwoProportions, [{\n    key: \"loadData\",\n    value: function loadData() {\n      var numASuccess = this.dom.aSuccess.value * 1;\n      var numAFailure = this.dom.aFailure.value * 1;\n      var numBSuccess = this.dom.bSuccess.value * 1;\n      var numBFailure = this.dom.bFailure.value * 1;\n\n      if (numASuccess <= 0 || numAFailure <= 0 || numBSuccess <= 0 || numBFailure <= 0) {\n        alert(_util_translate_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].twoProportions.alertAtLeastOne);\n      } else {\n        var summary = {\n          numASuccess: numASuccess,\n          numAFailure: numAFailure,\n          numBSuccess: numBSuccess,\n          numBFailure: numBFailure,\n          proportionA: numASuccess / (numASuccess + numAFailure),\n          // todo(matthewmerrill): fixed decimals\n          proportionB: numBSuccess / (numBSuccess + numBFailure)\n        };\n        summary.proportionDiff = summary.proportionA - summary.proportionB;\n        _util_summaries_js__WEBPACK_IMPORTED_MODULE_3__[\"updateSummaryElements\"](this.summaryElements, summary);\n        this.data = {\n          numASuccess: numASuccess,\n          numAFailure: numAFailure,\n          numBSuccess: numBSuccess,\n          numBFailure: numBFailure\n        };\n        this.charts.inputChart.setProportions(this.data);\n        this.charts.inputChart.update();\n        this.charts.lastSimChart.setProportions({\n          numASuccess: 0,\n          numAFailure: 0,\n          numBSuccess: 0,\n          numBFailure: 0\n        });\n        this.charts.lastSimChart.update();\n        this.charts.tailChart.reset();\n        this.charts.tailChart.updateChart();\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.dom.needData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var elem = _step.value;\n            elem.removeAttribute('disabled');\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.dom.needResults[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _elem = _step2.value;\n\n            _elem.setAttribute('disabled', true);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        this.dom.tailInputElement.value = Object(_util_math_js__WEBPACK_IMPORTED_MODULE_0__[\"roundToPlaces\"])(summary.proportionDiff, 4);\n        this.dom.tailInputElement.dispatchEvent(new Event('change'));\n        this.charts.tailChart.setTailInput(this.dom.tailInputElement.value * 1);\n        this.charts.tailChart.updateChart();\n      }\n    }\n  }, {\n    key: \"runSimulations\",\n    value: function runSimulations() {\n      var numSimulations = this.dom.numSimulations.value * 1;\n      var _this$data = this.data,\n          numASuccess = _this$data.numASuccess,\n          numAFailure = _this$data.numAFailure,\n          numBSuccess = _this$data.numBSuccess,\n          numBFailure = _this$data.numBFailure;\n      var totalSuccess = numASuccess + numBSuccess;\n      var totalFailure = numAFailure + numBFailure;\n      var totalGroupA = numASuccess + numAFailure;\n      var totalGroupB = numBSuccess + numBFailure;\n\n      for (var simIdx = 0; simIdx < numSimulations; simIdx++) {\n        //TODO(matthewmerrill): this isn't right, it should be BINOM\n        //let minASuccesses = Math.max(0, totalSuccess - totalGroupB);\n        //let maxASuccesses = Math.min(totalGroupA, totalSuccess);\n        //let sampleASuccess = randomInt(minASuccesses, maxASuccesses + 1);\n        //let sampleBSuccess = totalSuccess - sampleASuccess;\n        //TODO(matthewmerrill): don't shuffle\n        var allItems = new Array(totalGroupA + totalGroupB);\n        allItems.fill(0);\n        allItems.fill(1, 0, totalSuccess);\n        var shuffled = Object(_util_sampling_js__WEBPACK_IMPORTED_MODULE_1__[\"shuffle\"])(allItems);\n        var sampleA = shuffled.slice(0, totalGroupA);\n        var sampleB = shuffled.slice(totalGroupA);\n        var sampleASuccess = Object(_util_math_js__WEBPACK_IMPORTED_MODULE_0__[\"countWhere\"])(sampleA, function (x) {\n          return x == 1;\n        });\n        var sampleBSuccess = Object(_util_math_js__WEBPACK_IMPORTED_MODULE_0__[\"countWhere\"])(sampleB, function (x) {\n          return x == 1;\n        });\n        var sampleAFailure = totalGroupA - sampleASuccess;\n        var sampleBFailure = totalGroupB - sampleBSuccess;\n        var sampleAProportion = sampleASuccess / totalGroupA;\n        var sampleBProportion = sampleBSuccess / totalGroupB;\n        this.addSimulationResult(sampleAProportion - sampleBProportion);\n\n        if (simIdx + 1 === numSimulations) {\n          this.charts.lastSimChart.setProportions({\n            numASuccess: sampleASuccess,\n            numBSuccess: sampleBSuccess,\n            numAFailure: totalGroupA - sampleASuccess,\n            numBFailure: totalGroupB - sampleBSuccess\n          });\n          var summary = {\n            sampleASuccess: sampleASuccess,\n            sampleAFailure: sampleAFailure,\n            sampleBSuccess: sampleBSuccess,\n            sampleBFailure: sampleBFailure,\n            sampleProportionA: sampleASuccess / totalGroupA,\n            sampleProportionB: sampleBSuccess / totalGroupB,\n            sampleProportionDiff: (sampleASuccess - sampleBSuccess) / (totalGroupA + totalGroupB)\n          };\n          _util_summaries_js__WEBPACK_IMPORTED_MODULE_3__[\"updateSummaryElements\"](this.summaryElements, summary);\n        }\n      }\n\n      this.charts.lastSimChart.update();\n      this.charts.tailChart.updateChart();\n\n      if (this.charts.tailChart.results.length) {\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = this.dom.needResults[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var elem = _step3.value;\n            elem.removeAttribute('disabled');\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"addSimulationResult\",\n    value: function addSimulationResult(diffOfProps) {\n      this.charts.tailChart.addResult(diffOfProps);\n    }\n  }, {\n    key: \"updateSummary\",\n    value: function updateSummary() {\n      var _this$charts$summary = this.charts.summary,\n          total = _this$charts$summary.total,\n          chosen = _this$charts$summary.chosen,\n          unchosen = _this$charts$summary.unchosen;\n    }\n  }]);\n\n  return TwoProportions;\n}();\n\n//# sourceURL=webpack:///./dist/es/twoProportions/twoProportions.js?");

/***/ }),

/***/ "./dist/es/twoProportions/twoProportionsEntry.js":
/*!*******************************************************!*\
  !*** ./dist/es/twoProportions/twoProportionsEntry.js ***!
  \*******************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _twoProportions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./twoProportions.js */ \"./dist/es/twoProportions/twoProportions.js\");\n\nwindow.twoProportions = new _twoProportions_js__WEBPACK_IMPORTED_MODULE_0__[\"TwoProportions\"](document.getElementById('two-proportions'));\n\n//# sourceURL=webpack:///./dist/es/twoProportions/twoProportionsEntry.js?");

/***/ }),

/***/ "./dist/es/util/math.js":
/*!******************************!*\
  !*** ./dist/es/util/math.js ***!
  \******************************/
/*! exports provided: mean, stddev, sampleStddev, variance, roundToPlaces, minInArray, maxInArray, countWhere, z_value, z_score_alpha_2, getOneMeanConfidenceInterval, getCutOffInterval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mean\", function() { return mean; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stddev\", function() { return stddev; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sampleStddev\", function() { return sampleStddev; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"variance\", function() { return variance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"roundToPlaces\", function() { return roundToPlaces; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"minInArray\", function() { return minInArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"maxInArray\", function() { return maxInArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"countWhere\", function() { return countWhere; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"z_value\", function() { return z_value; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"z_score_alpha_2\", function() { return z_score_alpha_2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getOneMeanConfidenceInterval\", function() { return getOneMeanConfidenceInterval; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCutOffInterval\", function() { return getCutOffInterval; });\nfunction mean(itr) {\n  var sum = 0;\n  var count = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = itr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var item = _step.value;\n      sum += item;\n      count += 1;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return sum / count;\n} // Population Standard Deviation\n\nfunction stddev(itr) {\n  return Math.sqrt(variance(itr));\n} // Sample Standard Deviation\n\nfunction sampleStddev(itr) {\n  var n = itr.length;\n  if (n <= 1) return NaN;\n  var sampleMean = mean(itr);\n  var devSquare = itr.reduce(function (acc, x) {\n    return (x - sampleMean) * (x - sampleMean) + acc;\n  }, 0);\n  return Math.sqrt(devSquare / (n - 1));\n}\nfunction variance(itr) {\n  var sum = 0;\n  var count = 0;\n  var sumOfSquares = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = itr[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var item = _step2.value;\n      sum += item;\n      sumOfSquares += item * item;\n      count += 1;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  var mean = sum / count; // variance = sum(X^2) / N - mean(X)^2\n\n  return sumOfSquares / count - mean * mean;\n}\nfunction roundToPlaces(value, places) {\n  var pow10 = Math.pow(10, places);\n  return Math.round(value * pow10) / pow10;\n}\n/**\n * js Math.min and Math.max will cause stack overflow for large array size\n * @param {numnber array} arr\n */\n\nfunction minInArray(arr) {\n  if (!arr) return undefined;\n  return arr.reduce(function (acc, x) {\n    return acc < x ? acc : x;\n  }, arr[0]);\n}\nfunction maxInArray(arr) {\n  if (!arr) return undefined;\n  return arr.reduce(function (acc, x) {\n    return acc > x ? acc : x;\n  }, arr[0]);\n}\n/**\n * Counts items of iterable meeting predicate\n *\n * @param itr iterable\n * @param p   predicate\n */\n\nfunction countWhere(itr, p) {\n  if (itr === undefined || p === undefined) {\n    throw new Error(\"Missing parameter\");\n  }\n\n  var res = 0;\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = itr[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var item = _step3.value;\n\n      if (p(item)) {\n        res += 1;\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return res;\n}\nfunction z_value(probability) {\n  var Z_MAX = 6;\n  var p = probability;\n  var Z_EPSILON = 0.000001;\n  /* Accuracy of z approximation */\n\n  var minz = -Z_MAX;\n  var maxz = Z_MAX;\n  var zval = 0.0;\n  var pval;\n  if (p < 0.0) p = 0.0;\n  if (p > 1.0) p = 1.0;\n\n  while (maxz - minz > Z_EPSILON) {\n    pval = poz(zval);\n\n    if (pval > p) {\n      maxz = zval;\n    } else {\n      minz = zval;\n    }\n\n    zval = (maxz + minz) * 0.5;\n  }\n\n  return zval;\n}\nfunction z_score_alpha_2(confidenceLevel) {\n  var alpha = confidenceLevel / 100.0;\n  var alpha_over_2 = (1 - alpha) / 2.0;\n  return Math.abs(roundToPlaces(z_value(alpha_over_2), 2));\n}\nfunction getOneMeanConfidenceInterval(confidenceLevel, sampleMean, populationStd, sampleSize) {\n  var z_alpha_2 = z_score_alpha_2(confidenceLevel);\n  var sampleStd = (populationStd + 0.0) / Math.sqrt(sampleSize);\n  var leftBound = sampleMean - z_alpha_2 * sampleStd;\n  var rightBound = sampleMean + z_alpha_2 * sampleStd;\n  return [leftBound, rightBound];\n}\nfunction getCutOffInterval(confidenceLevel, totalSize) {\n  confidenceLevel = confidenceLevel / 100.0;\n  var alpha2 = (1 - confidenceLevel) / 2.0;\n  var lowerBound = alpha2 * totalSize;\n  var upperBound = totalSize - alpha2 * totalSize;\n  lowerBound = Math.floor(lowerBound);\n  upperBound = Math.floor(upperBound);\n  return [lowerBound, upperBound];\n}\n\nfunction poz(z) {\n  // O(1)\n  var Z_MAX = 6;\n  var y, x, w;\n\n  if (z == 0.0) {\n    x = 0.0;\n  } else {\n    y = 0.5 * Math.abs(z);\n\n    if (y > Z_MAX * 0.5) {\n      x = 1.0;\n    } else if (y < 1.0) {\n      w = y * y;\n      x = ((((((((0.000124818987 * w - 0.001075204047) * w + 0.005198775019) * w - 0.019198292004) * w + 0.059054035642) * w - 0.151968751364) * w + 0.319152932694) * w - 0.531923007300) * w + 0.797884560593) * y * 2.0;\n    } else {\n      y -= 2.0;\n      x = (((((((((((((-0.000045255659 * y + 0.000152529290) * y - 0.000019538132) * y - 0.000676904986) * y + 0.001390604284) * y - 0.000794620820) * y - 0.002034254874) * y + 0.006549791214) * y - 0.010557625006) * y + 0.011630447319) * y - 0.009279453341) * y + 0.005353579108) * y - 0.002141268741) * y + 0.000535310849) * y + 0.999936657524;\n    }\n  }\n\n  return z > 0.0 ? (x + 1.0) * 0.5 : (1.0 - x) * 0.5;\n}\n\n//# sourceURL=webpack:///./dist/es/util/math.js?");

/***/ }),

/***/ "./dist/es/util/sampling.js":
/*!**********************************!*\
  !*** ./dist/es/util/sampling.js ***!
  \**********************************/
/*! exports provided: randomInt, shuffle, randomSubset, splitUsing, splitByPredicate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"randomInt\", function() { return randomInt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shuffle\", function() { return shuffle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"randomSubset\", function() { return randomSubset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"splitUsing\", function() { return splitUsing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"splitByPredicate\", function() { return splitByPredicate; });\n/* harmony import */ var _util_translate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/translate.js */ \"./dist/es/util/translate.js\");\n\nfunction randomInt(from, to) {\n  return Math.floor((to - from) * Math.random()) + from;\n}\n/*\n * Returns a new array that contains shuffled elements of the original array.\n */\n\nfunction shuffle(arr) {\n  var clone = arr.concat([]);\n\n  function swap(i, j) {\n    var tmp = clone[i];\n    clone[i] = clone[j];\n    clone[j] = tmp;\n  }\n\n  for (var i = 0; i < arr.length; i++) {\n    var swapWith = randomInt(i, arr.length);\n    swap(i, swapWith);\n  }\n\n  return clone;\n}\n/**\n * Returns a two arrays: one array containing `n` pseudo-randomly chosen\n * elements from iterable `itr`, and another array containing all the\n * `unchosen` items. The order of the returned arrays are not guaranteed to be\n * random. Throws an exception if n > length(itr).\n */\n\nfunction randomSubset(itr, n) {\n  var result = Array(n);\n  var unchosen = [];\n  var seen = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = itr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var item = _step.value;\n\n      // Take first `n` items\n      if (seen < n) {\n        result[seen] = item;\n      } // Each subsequent item has some chance of being pulled in\n      else if (Math.random() < n / (seen + 1)) {\n          // Randomly decide who gets the boot\n          var replaceIdx = randomInt(0, n);\n          unchosen.push(result[replaceIdx]);\n          result[replaceIdx] = item;\n        } else {\n          unchosen.push(item);\n        }\n\n      seen += 1;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  if (seen < n) {\n    throw new Error(\"not enought elements\");\n  }\n\n  return {\n    chosen: result,\n    unchosen: unchosen\n  };\n}\n/**\n * fn is a predicate function\n * return two arrays, one is when fn is true, one is when fn is false\n * if fn is null, all elements will be unchosen\n */\n\nfunction splitUsing(itr, callback) {\n  var chosen = [];\n  var unchosen = [];\n  itr.forEach(function (obj, index) {\n    if (callback(obj, index)) {\n      chosen.push(obj);\n    } else {\n      unchosen.push(obj);\n    }\n  });\n  return [chosen, unchosen];\n}\nfunction splitByPredicate(itr, fn) {\n  var chosen = [];\n  var unchosen = [];\n  if (fn === null) unchosen = itr;else {\n    itr.forEach(function (x) {\n      if (fn(x)) chosen.push(x);else unchosen.push(x);\n    });\n  }\n  return {\n    chosen: chosen,\n    unchosen: unchosen\n  };\n}\n\n//# sourceURL=webpack:///./dist/es/util/sampling.js?");

/***/ }),

/***/ "./dist/es/util/stackeddotchart.js":
/*!*****************************************!*\
  !*** ./dist/es/util/stackeddotchart.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StackedDotChart; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// TODO(matthewmerrill): don't CDN\n//import Chart from \"chart.js\";\n\n/*\n\n\n*/\nvar StackedDotChart =\n/*#__PURE__*/\nfunction () {\n  function StackedDotChart(domElement, datasets, options) {\n    _classCallCheck(this, StackedDotChart);\n\n    this.domElement = domElement;\n    this.datasets = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = datasets[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var dataset = _step.value;\n        this.datasets.push(Object.assign({}, dataset, {\n          pointRadius: 8\n        }));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    this.chart = new Chart(domElement, {\n      type: \"scatter\",\n      data: {\n        datasets: this.datasets\n      },\n      options: {\n        scales: {\n          //xAxes: [{ ticks: { beginAtZero: true, }}],\n          yAxes: [{\n            ticks: {\n              min: 1,\n              stepSize: 1\n            }\n          }]\n        },\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n    options = options || {};\n    this.options = {\n      autoBuckets: options.autoBuckets !== undefined ? options.autoBuckets : true,\n      bucketWidth: options.bucketWidth\n    };\n  }\n\n  _createClass(StackedDotChart, [{\n    key: \"round\",\n    value: function round(x, bucketSize) {\n      if (bucketSize == undefined) {\n        if (this.options.autoBuckets) {\n          var scale = this.chart.scales['x-axis-1'];\n          var inScaleWidth = scale.options.ticks.max - scale.options.ticks.min;\n          var chartWidth = this.chart.width;\n          var pointRadius = this.chart.data.datasets[0].pointRadius;\n          bucketSize = 2 * pointRadius * (inScaleWidth / chartWidth);\n        } else if (this.options.bucketWidth) {\n          bucketSize = this.bucketWidth;\n        }\n      }\n\n      if (bucketSize) {\n        var r = Math.floor(x / bucketSize) * bucketSize;\n        return r;\n      } else {\n        return x;\n      }\n    }\n  }, {\n    key: \"rawToScatter\",\n    value: function rawToScatter(arrs) {\n      var faceted = [];\n      var counts = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = arrs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var arr = _step2.value;\n          var scatter = [];\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = arr[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var item = _step3.value;\n              item = this.round(item);\n              var y = counts[item] = (counts[item] || 0) + 1;\n              scatter.push({\n                x: item,\n                y: y\n              });\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          faceted.push(scatter);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return faceted;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.chart.data.datasets[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var dataset = _step4.value;\n          dataset.data = [];\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"setDataFromRaw\",\n    value: function setDataFromRaw(rawDataArrays) {\n      var scatterArrays = this.rawToScatter(rawDataArrays);\n\n      for (var idx = 0; idx < rawDataArrays.length; idx++) {\n        this.chart.data.datasets[idx].data = scatterArrays[idx];\n      }\n\n      var max = 1;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = scatterArrays[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var dataset = _step5.value;\n          var _iteratorNormalCompletion6 = true;\n          var _didIteratorError6 = false;\n          var _iteratorError6 = undefined;\n\n          try {\n            for (var _iterator6 = dataset[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n              var item = _step6.value;\n              max = Math.max(max, item.y);\n            }\n          } catch (err) {\n            _didIteratorError6 = true;\n            _iteratorError6 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n                _iterator6.return();\n              }\n            } finally {\n              if (_didIteratorError6) {\n                throw _iteratorError6;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      this.chart.options.scales.yAxes[0].ticks.stepSize = Math.pow(10, Math.floor(Math.log10(max)));\n    }\n  }, {\n    key: \"setScale\",\n    value: function setScale(start, end) {\n      this.chart.options.scales.xAxes[0].ticks.min = start;\n      this.chart.options.scales.xAxes[0].ticks.max = end;\n    }\n    /**\n     * Attempts to scale y dimension to make the dots stack directly on top of\n     * each other. If there is not enough space in the chart to do so, the y will\n     * scale to contain all the dots, squishing them to clip into each other.\n     * When there are many dots, this makes the stack look like a vertical bar.\n     */\n\n  }, {\n    key: \"scaleToStackDots\",\n    value: function scaleToStackDots() {\n      // TODO(matthewmerrill): memoize getMax with a dirty flag\n      var max = 1;\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = this.chart.data.datasets[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var dataset = _step7.value;\n          var _iteratorNormalCompletion8 = true;\n          var _didIteratorError8 = false;\n          var _iteratorError8 = undefined;\n\n          try {\n            for (var _iterator8 = dataset.data[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n              var item = _step8.value;\n              max = Math.max(max, item.y);\n            }\n          } catch (err) {\n            _didIteratorError8 = true;\n            _iteratorError8 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n                _iterator8.return();\n              }\n            } finally {\n              if (_didIteratorError8) {\n                throw _iteratorError8;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      var _this$chart$chartArea = this.chart.chartArea,\n          top = _this$chart$chartArea.top,\n          bottom = _this$chart$chartArea.bottom;\n      var chartHeight = bottom - top;\n      var pointRadius = this.chart.data.datasets[0].pointRadius;\n      this.chart.options.scales.yAxes[0].ticks.max = Math.max(max, this.chart.options.scales.yAxes[0].ticks.min + chartHeight / pointRadius * 0.5);\n    }\n  }, {\n    key: \"updateLabelName\",\n    value: function updateLabelName(datasetIndex, labelName) {\n      this.datasets[datasetIndex].label = labelName;\n    }\n  }, {\n    key: \"changeDotAppearance\",\n    value: function changeDotAppearance(pointRadius, stepSize) {\n      this.chart.data.datasets.forEach(function (x) {\n        x.pointRadius = pointRadius;\n      });\n      this.chart.options.scales.yAxes.forEach(function (x) {\n        x.ticks.stepSize = stepSize;\n      });\n    }\n  }, {\n    key: \"setAnimationDuration\",\n    value: function setAnimationDuration(duration) {\n      this.chart.options.animation.duration = duration;\n    }\n  }]);\n\n  return StackedDotChart;\n}();\n\n\n\n//# sourceURL=webpack:///./dist/es/util/stackeddotchart.js?");

/***/ }),

/***/ "./dist/es/util/summaries.js":
/*!***********************************!*\
  !*** ./dist/es/util/summaries.js ***!
  \***********************************/
/*! exports provided: loadSummaryElements, updateSummaryElements */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadSummaryElements\", function() { return loadSummaryElements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateSummaryElements\", function() { return updateSummaryElements; });\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction loadSummaryElements(dom) {\n  var summaryElements = {};\n  var summaryElementList = dom.querySelectorAll('[summary]');\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = summaryElementList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var summaryElement = _step.value;\n      var key = summaryElement.getAttribute('summary');\n\n      if (!summaryElements[key]) {\n        summaryElements[key] = [];\n      }\n\n      summaryElements[key].push(summaryElement);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return summaryElements;\n}\nfunction updateSummaryElements(summaryElements, state) {\n  for (var _i = 0, _Object$entries = Object.entries(state); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    var elems = summaryElements[key];\n\n    if (elems) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = elems[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var summaryElem = _step2.value;\n\n          if (summaryElem.hasAttribute('summaryint')) {\n            value = Math.round(value);\n          } else if (typeof value === 'number') {\n            value = value.toFixed(4);\n          }\n\n          summaryElem.innerText = value + '';\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }\n}\n\n//# sourceURL=webpack:///./dist/es/util/summaries.js?");

/***/ }),

/***/ "./dist/es/util/tailchart.js":
/*!***********************************!*\
  !*** ./dist/es/util/tailchart.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TailChart; });\n/* harmony import */ var _util_stackeddotchart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/stackeddotchart.js */ \"./dist/es/util/stackeddotchart.js\");\n/* harmony import */ var _util_math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/math.js */ \"./dist/es/util/math.js\");\n/* harmony import */ var _util_summaries_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/summaries.js */ \"./dist/es/util/summaries.js\");\n/* harmony import */ var _util_sampling_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/sampling.js */ \"./dist/es/util/sampling.js\");\n/* harmony import */ var _util_translate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/translate.js */ \"./dist/es/util/translate.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\nvar TailChart =\n/*#__PURE__*/\nfunction () {\n  function TailChart(config) {\n    _classCallCheck(this, TailChart);\n\n    var chartElement = config.chartElement,\n        whatAreWeRecording = config.whatAreWeRecording,\n        _config$summaryElemen = config.summaryElements,\n        summaryElements = _config$summaryElemen === void 0 ? {} : _config$summaryElemen;\n    this.tailDirection = null;\n    this.tailInput = 0;\n    this.whatAreWeRecording = whatAreWeRecording || _util_translate_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].twoMean.Samples;\n    this.dom = {\n      chartElement: chartElement\n    };\n    this.chart = new _util_stackeddotchart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](chartElement, [{\n      label: this.whatAreWeRecording,\n      backgroundColor: \"green\",\n      data: []\n    }, {\n      label: \"N/A\",\n      backgroundColor: \"red\",\n      data: []\n    }]);\n    this.summaryElements = summaryElements;\n    this.results = [];\n    this.updateChartLabels();\n  }\n\n  _createClass(TailChart, [{\n    key: \"reset\",\n    value: function reset() {\n      this.tailDiection = null;\n      this.tailInput = 0;\n      this.dropResults();\n    }\n  }, {\n    key: \"addResult\",\n    value: function addResult(result, skipCallback) {\n      this.results.push(result);\n      this.updateSummary();\n    }\n  }, {\n    key: \"addAllResults\",\n    value: function addAllResults(results) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = results[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var result = _step.value;\n          this.results.push(result);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.updateSummary();\n    }\n  }, {\n    key: \"dropResults\",\n    value: function dropResults() {\n      this.results = [];\n    }\n  }, {\n    key: \"updateSummary\",\n    value: function updateSummary() {\n      var _splitByPredicate = Object(_util_sampling_js__WEBPACK_IMPORTED_MODULE_3__[\"splitByPredicate\"])(this.results, this.predicateForTail(0)),\n          chosen = _splitByPredicate.chosen,\n          unchosen = _splitByPredicate.unchosen;\n\n      this.summary = {\n        total: this.results.length,\n        mean: _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"roundToPlaces\"](_util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"mean\"](this.results), 4),\n        stddev: _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"roundToPlaces\"](_util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"stddev\"](this.results), 4),\n        chosen: chosen.length,\n        unchosen: unchosen.length\n      };\n      this.summary.proportion = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"roundToPlaces\"](this.summary.chosen / this.summary.total, 4), _util_summaries_js__WEBPACK_IMPORTED_MODULE_2__[\"updateSummaryElements\"](this.summaryElements, this.summary);\n    }\n  }, {\n    key: \"setTailDirection\",\n    value: function setTailDirection(tailDirection) {\n      this.tailDirection = tailDirection;\n      this.updateSummary();\n    }\n  }, {\n    key: \"setTailInput\",\n    value: function setTailInput(tailInput) {\n      this.tailInput = tailInput;\n      this.updateSummary();\n    }\n  }, {\n    key: \"updateChartLabels\",\n    value: function updateChartLabels(mean) {\n      var word = this.whatAreWeRecording;\n      var roundedInput = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"roundToPlaces\"](this.tailInput, 4);\n\n      if (this.tailDirection == null || this.tailDirection == 'null') {\n        this.chart.updateLabelName(0, word);\n        this.chart.updateLabelName(1, \"N/A\");\n      } else if (this.tailDirection === \"oneTailRight\") {\n        this.chart.updateLabelName(0, \"\".concat(word, \" < \").concat(roundedInput));\n        this.chart.updateLabelName(1, \"\".concat(word, \" >= \").concat(roundedInput));\n      } else if (this.tailDirection === \"oneTailLeft\") {\n        this.chart.updateLabelName(0, \"\".concat(word, \" > \").concat(roundedInput));\n        this.chart.updateLabelName(1, \"\".concat(word, \" <= \").concat(roundedInput));\n      } else {\n        var distance = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"roundToPlaces\"](Math.abs(mean - this.tailInput), 2);\n        var left = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"roundToPlaces\"](mean - distance, 4);\n        var right = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"roundToPlaces\"](mean + distance, 4);\n\n        if (mean === 0) {\n          this.chart.updateLabelName(0, \"|\".concat(word, \"| < \").concat(Math.abs(right)));\n          this.chart.updateLabelName(1, \"|\".concat(word, \"| >= \").concat(Math.abs(right)));\n        } else {\n          this.chart.updateLabelName(0, \"\".concat(left, \" < \").concat(word, \" < \").concat(right));\n          this.chart.updateLabelName(1, \"\".concat(word, \" <= \").concat(left, \" or \").concat(word, \" >= \").concat(right));\n        }\n      }\n    }\n  }, {\n    key: \"predicateForTail\",\n    value: function predicateForTail(mean) {\n      var tailInput = this.tailInput;\n\n      if (this.tailDirection == null || this.tailDirection == 'null') {\n        return null;\n      } else if (this.tailDirection === \"oneTailRight\") {\n        return function (x) {\n          return x >= tailInput;\n        };\n      } else if (this.tailDirection === \"oneTailLeft\") {\n        return function (x) {\n          return x <= tailInput;\n        };\n      } else {\n        var distance = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"roundToPlaces\"](Math.abs(mean - this.tailInput), 2);\n        return function (x) {\n          return x <= mean - distance || x >= mean + distance;\n        };\n      }\n    }\n  }, {\n    key: \"updateChart\",\n    value: function updateChart() {\n      var valuesArr = this.results;\n      var min = Math.min.apply(undefined, valuesArr);\n      var max = Math.max.apply(undefined, valuesArr);\n      var mean = _util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"roundToPlaces\"](_util_math_js__WEBPACK_IMPORTED_MODULE_1__[\"mean\"](this.results), 2);\n\n      var _splitByPredicate2 = Object(_util_sampling_js__WEBPACK_IMPORTED_MODULE_3__[\"splitByPredicate\"])(valuesArr, this.predicateForTail(0)),\n          chosen = _splitByPredicate2.chosen,\n          unchosen = _splitByPredicate2.unchosen; // todo(matthewmerrill): if used for onemean, this isn't 0\n\n\n      this.updateChartLabels(0);\n      this.chart.setScale(min, max);\n      this.chart.setDataFromRaw([unchosen, chosen]);\n      this.chart.scaleToStackDots(); // update(0) disables animations. This prevents dots moving around confusingly.\n\n      this.chart.chart.update(0); //this.chart.setpointRadius = 2;\n    }\n  }]);\n\n  return TailChart;\n}();\n\n\n\n//# sourceURL=webpack:///./dist/es/util/tailchart.js?");

/***/ }),

/***/ "./dist/es/util/translate.js":
/*!***********************************!*\
  !*** ./dist/es/util/translate.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar translation = {\n  \"about\": {\n    \"contact\": \"Contacto\",\n    \"content1\": \"Las visualizaciones de análisis estadístico para estadísticas introductorias (SAVIS) se concibieron como parte de un proyecto de investigación colaborativa sobre educación estadística entre el Departamento de Matemáticas y Estadísticas de la Universidad Estatal de California en Sacramento (CSUS) y la Facultad de Matemáticas de la Universidad Autónoma de Yucatán (UADY) . SAVIS es una herramienta educativa para ayudar a comprender intuitivamente conceptos de pruebas de hipótesis estadísticas e intervalos de confianza mediante visualizaciones basadas en técnicas de muestreo y aleatorización. SAVIS tiene una versión en línea y una versión independiente (ambas disponibles gratuitamente) en inglés y español.\",\n    \"content2\": \"SAVIS fue creado en la primavera de 2019 y extendido en la primavera de 2020 por los siguientes graduados del Departamento de Informática de CSUS bajo la dirección de Rafael E. Díaz Escamilla, profesor del Departamento de Matemáticas y Estadística de CSUS:\",\n    \"contributors\": \"Contribuidores\",\n    \"title\": \"Acerca de SAVIS\"\n  },\n  \"download\": {\n    \"title\": \"Bajar Archivo\"\n  },\n  \"home\": {\n    \"title\": \"Inicio\"\n  },\n  \"oneMean\": {\n    \"InInterval\": \"Valores en intervalo\",\n    \"NotInInterval\": \"Valores no en intervalo\",\n    \"Samples\": \"Muestras\",\n    \"build\": \"Construir\",\n    \"chartTitle2\": \"Generar Población Hipotética\",\n    \"chartTitle4\": \"Distribucón de las Medias\",\n    \"ci\": \"Nivel de confianza\",\n    \"cititle\": \"Un intervalo de confianza medio\",\n    \"drawSample\": \"Obtenga la Muestra\",\n    \"enterData\": \"Teclee los Datos\",\n    \"errorNoPopulation\": \"No hay población\",\n    \"errorNotEnoughElements\": \"La muestra excede la población\",\n    \"extremeSamples\": \"Medias iguales a o más extremas que\",\n    \"hypotheticalPopulation\": \"Poblacíon Hipotética\",\n    \"id\": \"#\",\n    \"increaseData\": \"Incremente la muestra\",\n    \"loadData\": \"Cargar Datos\",\n    \"lower\": \"Límite inferior\",\n    \"mean1\": \"Media:\",\n    \"mean2\": \"Media\",\n    \"meanOfsamplesMeans\": \"Media de las medias:\",\n    \"mostRecentDraw\": \"Ultima Muestra\",\n    \"noData\": \"NaN\",\n    \"noOfSample\": \"# de muestras\",\n    \"oneTailLeft\": \"Una cola (izquierda)\",\n    \"oneTailRight\": \"Una cola (derecha)\",\n    \"original\": \"Datos Originales\",\n    \"originalSize\": \"Talla n:\",\n    \"pleaseSelect\": \"Tipo de Prueba\",\n    \"proportion\": \"Proporción:\",\n    \"reset\": \"Reinicio\",\n    \"runSim\": \"Correr Simulación\",\n    \"sample\": \"Muestra XXX\",\n    \"sampleMeans\": \"medias\",\n    \"sampleNo\": \"#\",\n    \"sampleSize\": \"Tamaño de muestra\",\n    \"samples\": \"muestras\",\n    \"sd1\": \"Desviación Estándar:\",\n    \"selectData\": \"Seleccione Datos Muestra\",\n    \"shiftMean\": \"Desplace la media\",\n    \"std\": \"Desviación Estándar\",\n    \"textAreaPlaceHolder\": \"Teclee datos aquí o arrastre archivo csv (sin títulos de columna - ver datos muestra en el menu de arriba)\",\n    \"times\": \"veces\",\n    \"title\": \"Una Media Prueba de hipótesis\",\n    \"totalNoOfSamples\": \"Total # de muestras:\",\n    \"totalSamples\": \"Total # muestras:\",\n    \"twoTail\": \"Dos colas\",\n    \"upload\": \"Subir archivo de datos\",\n    \"upper\": \"Límite superior\",\n    \"value\": \"Dato\"\n  },\n  \"oneProportion\": {\n    \"InInterval\": \"Valores en intervalo\",\n    \"NotInInterval\": \"Valores no en intervalo\",\n    \"Samples\": \"Muestras\",\n    \"addSamples\": \"Agregar Muestras\",\n    \"alertAtLeastOne\": \"Debe tener al menos uno éxitos y fracasos\",\n    \"binomial\": \"Predicción Binomial\",\n    \"build\": \"Construir\",\n    \"ci\": \"Nivel de confianza\",\n    \"cititle\": \"Intervalo de confianza de una proporción\",\n    \"data\": \"Datos\",\n    \"drawSamples\": \"Obtener Muestras:\",\n    \"enterData\": \"Teclee los Datos\",\n    \"failures\": \"Fracasos\",\n    \"inc\": \"Aumentado por\",\n    \"incrementWarning\": \"Incremente los datos para el grupo\",\n    \"incrementZeroWarning\": \"El aumento por factor debe ser mayor que cero\",\n    \"loadData\": \"Cargar Datos\",\n    \"lower\": \"Límite inferior\",\n    \"maxHead\": \"Max # de caras:\",\n    \"meanNoOfHeads\": \"Media # de caras:\",\n    \"meanOfSampleDiff\": \"Media de proporciones muestrales\",\n    \"minHead\": \"Min # de caras:\",\n    \"mostRecentDraw\": \"Ultima Muestra\",\n    \"noData\": \"NaN\",\n    \"noOfHeads\": \"# de muestras en\",\n    \"noOfSamples\": \"# de muestras\",\n    \"noOfSims\": \"# Simulaciones\",\n    \"probHeads\": \"Probabilidad de Caras p:\",\n    \"propOfRandom\": \"Proporción de éxitos del sorteo más reciente\",\n    \"proportion\": \"Proporción:\",\n    \"proportion1\": \"Proporción de éxitos:\",\n    \"remark1\": \"1. Haga dos clics en al gráfica para agrandarla o disminuirla si el # de lanzamientos es >= 50.\",\n    \"remark2\": \"2. Haga un clic en las leyendas para mostrar/esconder infromación correspondiente.\",\n    \"remarkTitle\": \"Notas:\",\n    \"reset\": \"Reinicio\",\n    \"runSims\": \"Correr Simulaciones\",\n    \"samplesInterval\": \"# de muestras en intervalo:\",\n    \"selectInterval\": \"Seleccione intervalo para el # de caras en\",\n    \"selected\": \"Seleccionadas\",\n    \"standardDeviation\": \"Desviación Estándar\",\n    \"std\": \"Desviación Estándar:\",\n    \"subTitle3\": \"Distribución muestral de proporciones\",\n    \"successes\": \"Éxitos\",\n    \"title\": \"Una Proporción Prueba de hipótesis\",\n    \"tosses1\": \"Lanzamientos:\",\n    \"tosses2\": \"lanzamientos:\",\n    \"totalSamples\": \"Total # de muestras:\",\n    \"upper\": \"Límite superior\"\n  },\n  \"site\": {\n    \"title\": \"Statistical Analysis Visualizations for Introductory Statistics\"\n  },\n  \"tailChart\": {\n    \"oneTailLeft\": \"Una cola (izquierda)\",\n    \"oneTailRight\": \"Una cola (derecha)\",\n    \"pleaseSelect\": \"Tipo de Prueba\",\n    \"twoTail\": \"Dos colas\"\n  },\n  \"twoMean\": {\n    \"InInterval\": \"Valores en intervalo\",\n    \"NotInInterval\": \"Valores no en intervalo\",\n    \"Samples\": \"Muestras\",\n    \"alertAtLeastOne\": \"Grupo 1 y Grupo 2 tienen que tener ambos al menos un elemento.\",\n    \"build\": \"Construir\",\n    \"ci\": \"Nivel de confianza\",\n    \"cititle\": \"Intervalo de confianza de dos medios\",\n    \"diffOfMean\": \"Diferencia entre Medias (Media 1 - Media 2):\",\n    \"diffOfSampleMean\": \"Differencia entre medias (de muestras aleatorizadas):\",\n    \"differences\": \"Diferencias\",\n    \"enterData\": \"Teclee los Datos\",\n    \"gp1Mean\": \"Media 1 (Grupo 1):\",\n    \"gp1SD\": \"Desviación Estándar (Grupo 1):\",\n    \"gp2Mean\": \"Media 2 (Grupo 2):\",\n    \"gp2SD\": \"Desviación Estándar (Grupo 2):\",\n    \"group1\": \"Grupo 1\",\n    \"group2\": \"Grupo 2\",\n    \"inc1\": \"Aumentar en (Grupo 1)\",\n    \"inc2\": \"Aumentar en (Grupo 2)\",\n    \"incrementWarning\": \"Incremente los datos para el grupo\",\n    \"incrementZeroWarning\": \"El aumento por factor debe ser mayor que cero\",\n    \"loadData\": \"Cargar Datos\",\n    \"lower\": \"Límite inferior\",\n    \"meanSampleDiff\": \"Media de las Diferencias:\",\n    \"mostRecentDraw\": \"Ultima Muestra\",\n    \"noData\": \"NaN\",\n    \"numSelected\": \"# de Diferencias Extremas:\",\n    \"numSim\": \"# de Simulaciones\",\n    \"oriDiffOfMean\": \"Diferencia de Medias en Datos Originales:\",\n    \"placeholder\": \"Teclee datos o arrastre aquí archivo csv: primera columa para codigo de grupos (1 o 2), segunda colunmna para la variable (sin títulos de columna - ver datos muestra en el menu de arriba)\",\n    \"proportionSelcted\": \"Proporción de Diferencias Extremas:\",\n    \"randomMean1\": \"Media de la Muestra Randomizada al Grupo 1:\",\n    \"randomMean2\": \"Media de la Muestra Randomizada al Grupo 2:\",\n    \"randomSD1\": \"Desviación Estándar de la Muestra Randomizada al Grupo 1:\",\n    \"randomSD2\": \"Desviación Estándar de la Muestra Randomizada al Grupo 2:\",\n    \"reset\": \"Reinicio\",\n    \"runSim\": \"Correr Simulacón\",\n    \"runSims\": \"Correr Simulaciones\",\n    \"selectAllExtreme\": \"Seleccionar las diferencias iguales a o más extremas que:\",\n    \"selectData\": \"Seleccione Datos Muestra\",\n    \"size1\": \"Tamaño n (Grupo 1):\",\n    \"size2\": \"Tamaño n (Grupo 2):\",\n    \"stdSampleDiff\": \"Desviación Estándar:\",\n    \"subTitle3\": \"Distribución de diferencias de medias\",\n    \"title\": \"Dos Medias Prueba de hipótesis\",\n    \"totalSamples\": \"Total # de muestras:\",\n    \"upload\": \"Subir archivo de datos\",\n    \"upper\": \"Límite superior\"\n  },\n  \"twoProportions\": {\n    \"InInterval\": \"Valores en intervalo\",\n    \"NotInInterval\": \"Valores no en intervalo\",\n    \"alertAtLeastOne\": \"Grupo A y Grupo B tienen que tener ambos al menos un elemento.\",\n    \"build\": \"Construir\",\n    \"ci\": \"Nivel de confianza\",\n    \"cititle\": \"Intervalo de confianza de dos proporciones\",\n    \"diffOfProp\": \"Differencias de Proporciones\",\n    \"differences\": \"Diferencias\",\n    \"enterData\": \"Teclee los Datos\",\n    \"failures\": \"Fracasos\",\n    \"groupA\": \"Grupo A\",\n    \"groupB\": \"Grupo B\",\n    \"inc\": \"Aumentado por\",\n    \"incrementWarning\": \"Incremente los datos para el grupo\",\n    \"incrementZeroWarning\": \"El aumento por factor debe ser mayor que cero\",\n    \"loadData\": \"Subir Datos\",\n    \"lower\": \"Límite inferior\",\n    \"meanOfSampleDiff\": \"Media de las Diferencias de Proporciones:\",\n    \"mostRecentDraw\": \"Ultima Muestra\",\n    \"noData\": \"NaN\",\n    \"noOfSelected\": \"# Diferencias Extremas:\",\n    \"noOfSims\": \"# Simulaciones\",\n    \"noSim\": \"N/A\",\n    \"oriDatasetDiff\": \"Differencia de Proporciones en Datos Originales:\",\n    \"propGroupA\": \"Proporción de Exitos en Grupo A\",\n    \"propGroupB\": \"Proporción de Exitos en Grupo B\",\n    \"propOfRandomA\": \"Proporción de Exitos Randomizados al Grupo A\",\n    \"propOfRandomB\": \"Proporción de Exitos Randomizados al Grupo B\",\n    \"propSamplesSelected\": \"Proporción de Diferencias Extremas\",\n    \"runSims\": \"Correr Simulaciones\",\n    \"selectAllExtreme\": \"Seleccionar las diferencias iguales a o más extremas que:\",\n    \"std\": \"Desviación Estándar:\",\n    \"subTitle3\": \"Distribución de las Differencias de Proporciones\",\n    \"successes\": \"Exitos\",\n    \"title\": \"Dos Proporciones Prueba de hipótesis\",\n    \"totalSamples\": \"Total # de Muestras:\",\n    \"upper\": \"Límite superior\"\n  },\n  \"userManual\": {\n    \"title\": \"Manual del Usuario\"\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (translation);\n\n//# sourceURL=webpack:///./dist/es/util/translate.js?");

/***/ })

/******/ });